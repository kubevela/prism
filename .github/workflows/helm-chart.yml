name: HelmChart
on:
  push:
    branches:
      - "v*"
    tags:
      - "v*"
  pull_request:
    branches:
      - "v*"
  workflow_dispatch: {}

env:
  BUCKET: ${{ secrets.OSS_BUCKET }}
  ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
  ACCESS_KEY: ${{ secrets.OSS_ACCESS_KEY }}
  ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

jobs:
  publish-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Get the vars
        id: vars
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: Login ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login Alibaba Cloud ACR
        uses: docker/login-action@v1
        with:
          registry: kubevela-registry.cn-hangzhou.cr.aliyuncs.com
          username: ${{ secrets.ACR_USERNAME }}@aliyun-inner.com
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: image=moby/buildkit:master

      - name: Build & Pushing vela-prism for ACR
        run: |
          docker build --build-arg GOPROXY=https://proxy.golang.org -t kubevela-registry.cn-hangzhou.cr.aliyuncs.com/oamdev/vela-prism:${{ steps.vars.outputs.TAG }} .
          docker push kubevela-registry.cn-hangzhou.cr.aliyuncs.com/oamdev/vela-prism:${{ steps.vars.outputs.TAG }}
      - uses: docker/build-push-action@v2
        name: Build & Pushing vela-prism for Dockerhub and GHCR
        with:
          context: .
          file: Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            GOPROXY=https://proxy.golang.org
          tags: |-
            docker.io/oamdev/vela-prism:${{ steps.vars.outputs.TAG }}
            ghcr.io/${{ github.repository }}/vela-prism:${{ steps.vars.outputs.TAG }}

  publish-charts:
    env:
      HELM_CHART: charts/
      LOCAL_OSS_DIRECTORY: .oss/
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Get the vars
        id: vars
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: kubevela/prism
          releases-only: true
        id: latest_tag
      - name: Tag helm chart image
        run: |
          latest_repo_tag=${{ steps.latest_tag.outputs.tag }}
          sub="."
          major="$(cut -d"$sub" -f1 <<<"$latest_repo_tag")"
          minor="$(cut -d"$sub" -f2 <<<"$latest_repo_tag")"
          patch="0"
          current_repo_tag="$major.$minor.$patch"
          image_tag=${GITHUB_REF#refs/tags/}
          chart_version=$latest_repo_tag
          if [[ ${GITHUB_REF} == "refs/heads/master" ]]; then
            image_tag=latest
            chart_version=${current_repo_tag}-nightly-build
          fi
          sed -i "s/latest/${image_tag}/g" $HELM_CHART/values.yaml
          chart_smever=${chart_version#"v"}
          sed -i "s/0.1.0/$chart_smever/g" $HELM_CHART/Chart.yaml
      - name: Install ossutil
        run: wget http://gosspublic.alicdn.com/ossutil/1.7.0/ossutil64 && chmod +x ossutil64 && mv ossutil64 ossutil
      - name: Configure Alibaba Cloud OSSUTIL
        run: ./ossutil --config-file .ossutilconfig config -i ${ACCESS_KEY} -k ${ACCESS_KEY_SECRET} -e ${ENDPOINT} -c .ossutilconfig
      - name: sync cloud to local
        run: ./ossutil --config-file .ossutilconfig sync oss://$BUCKET/prism $LOCAL_OSS_DIRECTORY
      - name: Package helm charts
        run: |
          helm package $HELM_CHART --destination $LOCAL_OSS_DIRECTORY
          helm repo index --url https://$BUCKET.$ENDPOINT/prism $LOCAL_OSS_DIRECTORY
      - name: sync local to cloud
        run: ./ossutil --config-file .ossutilconfig sync $LOCAL_OSS_DIRECTORY oss://$BUCKET/prism -f
